{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib","mergelive.min.js","lib/diffsync/handler.js","lib/diffsync/server.js","lib/diffsync/syncdoc.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","mergelive","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"SyncDocument","SyncServer","SyncHandler","./diffsync/handler","./diffsync/server","./diffsync/syncdoc",2,"options","socket","get_object","oninit","error","onchange","handler","onerror","console","document","on","onmessage","bind","prototype","require_document","load","query","callback","send","JSON","stringify","type","data","push","edits","message","message_object","parse","handle_init","object","handle_acknowledge","version","acknowledge","handle_pull","forEach","edit","pull","handle_load","handle_error","./syncdoc",3,"last_connection_id","handlers","onconnection","id","broadcast_change","sender_id","Object","keys","handler_id","./handler",4,"jiff","diff","patch","copy","obj","shadow","other_version","backup","delta","rollback","filter","receipt","undefined"],"mappings":"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","file":"mergelive.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = \n{\n\tSyncDocument: require('./diffsync/syncdoc').SyncDocument,\n    SyncServer: require('./diffsync/server').SyncServer,\n    SyncHandler: require('./diffsync/handler').SyncHandler\n}",null,"var SyncDocument = require('./syncdoc').SyncDocument\n\n\nvar SyncHandler = function (options)\n{\n    options = options || {}\n    \n    if (!options.socket)\n    {\n        throw new Error(\"You must provide a web socket.\")\n    }\n    \n    this.socket = options.socket\n    this.get_object = options.get_object\n    this.oninit = options.oninit || function (error) {}\n    this.onchange = options.onchange || function (handler) {}\n    this.onerror = options.onerror || function (error) { console.error(error) }\n    this.document = null\n    \n    this.socket.on(\"message\", this.onmessage.bind(this))\n}\n\nSyncHandler.prototype.require_document = function ()\n{\n    if (!this.document)\n    {\n        throw new Error(\"No document, you must load one first.\")\n    }\n}\n\nSyncHandler.prototype.load = function (query, callback)\n{\n    this.socket.send(JSON.stringify({type:'load', data:query}), callback)\n}\n\nSyncHandler.prototype.push = function (callback)\n{\n    this.require_document()\n    this.document.push()\n    \n    if (this.document.edits.length > 0)\n    {\n        this.socket.send(JSON.stringify({type:'pull', data: this.document.edits}), callback)\n    }\n    else if (callback)\n    {\n        callback()\n    }\n}\n\nSyncHandler.prototype.onmessage = function (message)\n{\n    var message_object = JSON.parse(message)\n    if (!message_object.type)\n    {\n        throw new Error(\"Message is missing a type\")\n    }\n    \n    var handler = \"handle_\" + message_object.type\n    if (!this[handler])\n    {\n        throw new Error(\"Unknown message type: \" + message_object.type)\n    }\n    \n    this[handler](message_object.data)\n}\n\nSyncHandler.prototype.handle_init = function (object)\n{\n    this.document = new SyncDocument(object)\n    this.oninit()\n}\n\nSyncHandler.prototype.handle_acknowledge = function (version)\n{\n    this.require_document()\n    this.document.acknowledge(version)\n}\n\nSyncHandler.prototype.handle_pull = function (edits)\n{\n    this.require_document()\n    edits.forEach(function (edit)\n    {\n        this.document.pull(edit)\n    }.bind(this))\n    \n    this.onchange(this.document.object)\n}\n\nSyncHandler.prototype.handle_load = function (query)\n{\n    if (!this.get_object)\n    {\n        this.socket.send(JSON.stringify({type:'error', data: 'No object loader available.'}))\n        return\n    }\n    \n    var object = this.get_object(query)\n    \n    if (!object)\n    {\n        this.socket.send(JSON.stringify({type:'error', data: 'Object could not be loaded.'}))\n        return\n    }\n    \n    this.document = new SyncDocument(object)\n    this.socket.send(JSON.stringify({type: 'init', data: object}))\n}\n\nSyncHandler.prototype.handle_error = function (error)\n{\n    this.onerror(error)\n}\n\nmodule.exports = \n{\n    SyncHandler: SyncHandler\n}","var SyncHandler = require('./handler').SyncHandler\n\n\nvar SyncServer = function (options)\n{\n\toptions = options || {}\n\t\n\tif (!options.socket)\n\t{\n\t\tthrow new Error(\"A socket is required.\")\n\t}\n\t\n\tif (!options.get_object)\n\t{\n\t\tthrow new Error(\"A `get_object` function is required.\")\n\t}\n\t\n\tthis.get_object = options.get_object\n\tthis.socket = options.socket\n\tthis.onchange = options.onchange || function () {}\n\tthis.last_connection_id = 0\n\tthis.handlers = {}\n\t\n\tthis.socket.on('connection', this.onconnection.bind(this))\n}\n\nSyncServer.prototype.onconnection = function (socket)\n{\n\tvar id = this.last_connection_id,\n\t\thandler = new SyncHandler(\n\t\t{\n\t\t\tsocket: socket,\n\t\t\tget_object: this.get_object,\n\t\t\tonchange: function (object)\n\t\t\t{\n\t\t\t\tthis.onchange(object)\n\t\t\t\tthis.broadcast_change(id, object)\n\t\t\t}.bind(this)\n\t\t})\n\t\t\n\tthis.handlers[id] = handler\n\tsocket.on(\"close\", function ()\n\t{\n\t\tdelete this.handlers[id]\n\t}.bind(this))\n}\n\nSyncServer.prototype.broadcast_change = function (sender_id)\n{\n\tObject.keys(this.handlers, function (handler_id)\n\t{\n\t\tif (handler_id != sender_id)\n\t\t{\n\t\t\tvar handler = this.handlers[handler_id]\n\t\t\t\n\t\t\tif (handler)\n\t\t\t{\n\t\t\t\thandler.push()\n\t\t\t}\n\t\t}\n\t}.bind(this))\n}\n\n\nmodule.exports = \n{\n\tSyncServer: SyncServer\n}\n","var jiff = require('jiff'),\n\tdiff = jiff.diff,\n\tpatch = jiff.patch,\n\tcopy = function (obj) { return JSON.parse(JSON.stringify(obj)) }\n\n\nvar SyncDocument = function SyncDocument (object)\n{\n\t/* The canonical version of our object. Edit this. */\n\tthis.object = object\n\t\n\t/* A shadow that maintains sync with our buddy's shadow. */\n\tthis.shadow = {\n\t\tversion: 0,\n\t\tother_version: 0,\n\t\tobject: copy(object)\n\t}\n\t\n\t/* A backup of the shadow we can use to rollback if updates\n\tare dropped by our buddy */\n\tthis.backup = {\n\t\tversion: 0,\n\t\tobject: copy(object)\n\t}\n\t\n\t/* A stack of our edits that have not been confirmed by our buddy. */\n\tthis.edits = []\n}\n\n\nSyncDocument.prototype.push = function ()\n{\n\t/* First let's try to create a delta against our shadow */\n\tvar delta = diff(this.shadow.object, this.object)\n\t\n\t/* If there aren't any changes, we're done. */\n\tif (delta.length == 0)\n\t{\n\t\treturn\n\t}\n\t\n\t/* An edit is a delta along with some version information for housekeeping. */\n\tvar edit = {\n\t\tversion: this.shadow.version,\n\t\tother_version: this.shadow.other_version,\n\t\tdelta: delta\n\t}\n\t\n\t/* First back up our shadow */\n\tthis.backup.object = this.shadow.object\n\tthis.backup.version = this.shadow.version\n\t\n\t/*  Then copy the latest version to the shadow and increment the shadow's version */\n\tthis.shadow.object = copy(this.object)\n\tthis.shadow.version++\n\t\n\t/* Then send the edit to our buddy to be applied to its shadow. */\n\tthis.edits.push(edit)\n}\n\nSyncDocument.prototype.pull = function (edit)\n{\n\t/* The edit comes from our buddy. The edit's version is the base version\n\tof our buddy's diff (our \"other_version\"). */\n\t\n\t/* If there are no changes, we are dealing with an acknowledgement of the\n\tlast version received by our buddy */\n\tif (!edit.delta)\n\t{\n\t\tthis.acknowledge(edit.other_version)\n\t\treturn\n\t}\n\t\n\t/* If the edit version is older than the version we last got from our buddy it \n\tmeans we already saw this edit and most likely our acknowledgement was dropped.\n\tWe don't need to do anything about this. */\n\tif (edit.version < this.shadow.other_version)\n\t{\n\t\treturn\n\t}\n\t\n\t/*\n\tIf the last version of us our buddy got doesn't match our current version\n\tit means our buddy missed some of our edits. We need to rollback.\n\t*/\n\tif (edit.other_version != this.shadow.version)\n\t{\n\t\tthis.rollback()\n\t\treturn\n\t}\n\t\n\t/* If all the version numbers match up we can patch our shadow and then \n\tattempt to patch our canonical version */\n\tthis.shadow.object = patch(edit.delta, this.shadow.object)\n\tthis.shadow.other_version = edit.version + 1\n\t\n\t/* If our canonical version is just too different, we can skip this patch and send out the\n\tdelta between our canonical version and patched shadow effectively clobbering this edit\n\ton our buddy's end */\n\ttry\n\t{\n\t\tthis.object = patch(edit.delta, this.object)\n\t}\n\tcatch (e)\n\t{\n\t\tthis.push()\n\t}\n\t\n\tthis.acknowledge(edit.other_version)\n}\n\nSyncDocument.prototype.acknowledge = function (version)\n{\n\t/* Remove any edits in our edit stack that are against the last version our buddy \n\thas just confirmed so that they aren't resent */\n\tthis.edits = this.edits.filter(function (e)\n\t{\n\t\treturn version < e.version\n\t})\n}\n\nSyncDocument.prototype.rollback = function (edit)\n{\n\t/* Clear all outgoing edits since they are based on a version we are clobbering */\n\tthis.edits = []\n\t\n\t/* Restore the shadow from the backup */\n\tthis.shadow.object = copy(this.backup.object)\n\tthis.shadow.version = this.backup.version\n\t\n\t/* Apply the edit per usual */\n\tthis.pull(edit)\n}\n\nSyncDocument.prototype.receipt = function ()\n{\n\treturn this.shadow.other_version\n}\n\nmodule.exports = \n{\n\tSyncDocument: SyncDocument\n}"],"sourceRoot":"/source/"}